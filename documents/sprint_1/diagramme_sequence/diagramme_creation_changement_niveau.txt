@startuml

title "Création/Changement Niveaux - Sequence Diagram"

actor player as player

create Jeu
player -> Jeu: new
player -> Jeu: demarrerPartie()
activate Jeu 

Jeu -> Jeu: nbLabyrinthe = 0
create Joueur
Jeu -> Joueur: new

loop While nbLabyrinthe < nbMaxNiveau

    create Labyrinthe
    Jeu -> Labyrinthe: new Labyrinthe(nbLabyrinthe)
    Labyrinthe -> Labyrinthe: initialiserParGenerationAutomatique()
    activate Labyrinthe
    deactivate Labyrinthe
    Labyrinthe -> Labyrinthe: ajouterTresors()
    note left: le nombre de trésors par niveau est défini\npar une constante dans la classe Labyrinthe
    activate Labyrinthe
    loop pour le nombre de case Trésor ajoutée
        create CaseTresor
        Labyrinthe -> CaseTresor: new
    end
    deactivate Labyrinthe
    Labyrinthe -> Labyrinthe: ajouterCasesEffets()
    note left: + nbLabyrinthe est grand, + il y a de cases
    activate Labyrinthe
    loop pour le nombre de case Effet ajoutée 
        create CaseEffet
        Labyrinthe -> CaseEffet: new
    end
    deactivate Labyrinthe
    Jeu -> Jeu: creersMonstres(nbLabyrinthe)
    note right: + nbLabyrinthe est grand, + il y a de monstres
    loop pour le nombre de monstres créé
        create ThreadMonstre
        Jeu -> ThreadMonstre: new
        Jeu -> ThreadMonstre: run()
    end
    Jeu -> Jeu: nbLabyrinthe++
    Jeu -> Jeu: determinerDepart(Labyrinthe)
    note left: return [x, y]
    Jeu -> Joueur: setX(x)
    activate Joueur
    deactivate Joueur
    Jeu -> Joueur: setY(y)
    activate Joueur
    deactivate Joueur
    Jeu -> Jeu: etreSurSortie(x, y)
    note left: return False or True
    loop While etreSurSortie(x,y) == False
        player -> Jeu: controles(cmd)
        opt cmd est un déplacement
            Jeu -> Joueur: getX()
            activate Joueur
            Jeu <-- Joueur: y
            deactivate Joueur
            Jeu -> Joueur: getY()
            activate Joueur
            Jeu <-- Joueur: y
            deactivate Joueur
        end
        Jeu -> Jeu: etreSurSortie(x, y)
        note left: return False or True
    end
    destroy Labyrinthe
end
deactivate Jeu

@enduml